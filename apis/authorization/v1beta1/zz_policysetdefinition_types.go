// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PolicyDefinitionGroupInitParameters struct {

	// The ID of a resource that contains additional metadata about this policy definition group.
	AdditionalMetadataResourceID *string `json:"additionalMetadataResourceId,omitempty" tf:"additional_metadata_resource_id,omitempty"`

	// The category of this policy definition group.
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// The description of this policy definition group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of this policy definition group.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The name of this policy definition group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type PolicyDefinitionGroupObservation struct {

	// The ID of a resource that contains additional metadata about this policy definition group.
	AdditionalMetadataResourceID *string `json:"additionalMetadataResourceId,omitempty" tf:"additional_metadata_resource_id,omitempty"`

	// The category of this policy definition group.
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// The description of this policy definition group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of this policy definition group.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The name of this policy definition group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type PolicyDefinitionGroupParameters struct {

	// The ID of a resource that contains additional metadata about this policy definition group.
	// +kubebuilder:validation:Optional
	AdditionalMetadataResourceID *string `json:"additionalMetadataResourceId,omitempty" tf:"additional_metadata_resource_id,omitempty"`

	// The category of this policy definition group.
	// +kubebuilder:validation:Optional
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// The description of this policy definition group.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of this policy definition group.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The name of this policy definition group.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type PolicyDefinitionReferenceInitParameters struct {

	// Parameter values for the referenced policy rule. This field is a JSON string that allows you to assign parameters to this policy rule.
	ParameterValues *string `json:"parameterValues,omitempty" tf:"parameter_values,omitempty"`

	// The ID of the policy definition that will be included in this policy set definition.
	PolicyDefinitionID *string `json:"policyDefinitionId,omitempty" tf:"policy_definition_id,omitempty"`

	// A list of names of the policy definition groups that this policy definition reference belongs to.
	// +listType=set
	PolicyGroupNames []*string `json:"policyGroupNames,omitempty" tf:"policy_group_names,omitempty"`

	// A unique ID within this policy set definition for this policy definition reference.
	ReferenceID *string `json:"referenceId,omitempty" tf:"reference_id,omitempty"`
}

type PolicyDefinitionReferenceObservation struct {

	// Parameter values for the referenced policy rule. This field is a JSON string that allows you to assign parameters to this policy rule.
	ParameterValues *string `json:"parameterValues,omitempty" tf:"parameter_values,omitempty"`

	// The ID of the policy definition that will be included in this policy set definition.
	PolicyDefinitionID *string `json:"policyDefinitionId,omitempty" tf:"policy_definition_id,omitempty"`

	// A list of names of the policy definition groups that this policy definition reference belongs to.
	// +listType=set
	PolicyGroupNames []*string `json:"policyGroupNames,omitempty" tf:"policy_group_names,omitempty"`

	// A unique ID within this policy set definition for this policy definition reference.
	ReferenceID *string `json:"referenceId,omitempty" tf:"reference_id,omitempty"`
}

type PolicyDefinitionReferenceParameters struct {

	// Parameter values for the referenced policy rule. This field is a JSON string that allows you to assign parameters to this policy rule.
	// +kubebuilder:validation:Optional
	ParameterValues *string `json:"parameterValues,omitempty" tf:"parameter_values,omitempty"`

	// The ID of the policy definition that will be included in this policy set definition.
	// +kubebuilder:validation:Optional
	PolicyDefinitionID *string `json:"policyDefinitionId" tf:"policy_definition_id,omitempty"`

	// A list of names of the policy definition groups that this policy definition reference belongs to.
	// +kubebuilder:validation:Optional
	// +listType=set
	PolicyGroupNames []*string `json:"policyGroupNames,omitempty" tf:"policy_group_names,omitempty"`

	// A unique ID within this policy set definition for this policy definition reference.
	// +kubebuilder:validation:Optional
	ReferenceID *string `json:"referenceId,omitempty" tf:"reference_id,omitempty"`
}

type PolicySetDefinitionInitParameters struct {

	// The description of the policy set definition.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of the policy set definition.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The id of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/management/v1beta1.ManagementGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	ManagementGroupID *string `json:"managementGroupId,omitempty" tf:"management_group_id,omitempty"`

	// Reference to a ManagementGroup in management to populate managementGroupId.
	// +kubebuilder:validation:Optional
	ManagementGroupIDRef *v1.Reference `json:"managementGroupIdRef,omitempty" tf:"-"`

	// Selector for a ManagementGroup in management to populate managementGroupId.
	// +kubebuilder:validation:Optional
	ManagementGroupIDSelector *v1.Selector `json:"managementGroupIdSelector,omitempty" tf:"-"`

	// The metadata for the policy set definition. This is a JSON object representing additional metadata that should be stored with the policy definition.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// Parameters for the policy set definition. This field is a JSON object that allows you to parameterize your policy definition.
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// One or more policy_definition_group blocks as defined below.
	PolicyDefinitionGroup []PolicyDefinitionGroupInitParameters `json:"policyDefinitionGroup,omitempty" tf:"policy_definition_group,omitempty"`

	// One or more policy_definition_reference blocks as defined below.
	PolicyDefinitionReference []PolicyDefinitionReferenceInitParameters `json:"policyDefinitionReference,omitempty" tf:"policy_definition_reference,omitempty"`

	// The policy set type. Possible values are BuiltIn, Custom, NotSpecified and Static. Changing this forces a new resource to be created.
	PolicyType *string `json:"policyType,omitempty" tf:"policy_type,omitempty"`
}

type PolicySetDefinitionObservation struct {

	// The description of the policy set definition.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of the policy set definition.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The ID of the Policy Set Definition.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The id of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
	ManagementGroupID *string `json:"managementGroupId,omitempty" tf:"management_group_id,omitempty"`

	// The metadata for the policy set definition. This is a JSON object representing additional metadata that should be stored with the policy definition.
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// Parameters for the policy set definition. This field is a JSON object that allows you to parameterize your policy definition.
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// One or more policy_definition_group blocks as defined below.
	PolicyDefinitionGroup []PolicyDefinitionGroupObservation `json:"policyDefinitionGroup,omitempty" tf:"policy_definition_group,omitempty"`

	// One or more policy_definition_reference blocks as defined below.
	PolicyDefinitionReference []PolicyDefinitionReferenceObservation `json:"policyDefinitionReference,omitempty" tf:"policy_definition_reference,omitempty"`

	// The policy set type. Possible values are BuiltIn, Custom, NotSpecified and Static. Changing this forces a new resource to be created.
	PolicyType *string `json:"policyType,omitempty" tf:"policy_type,omitempty"`
}

type PolicySetDefinitionParameters struct {

	// The description of the policy set definition.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The display name of the policy set definition.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The id of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/management/v1beta1.ManagementGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ManagementGroupID *string `json:"managementGroupId,omitempty" tf:"management_group_id,omitempty"`

	// Reference to a ManagementGroup in management to populate managementGroupId.
	// +kubebuilder:validation:Optional
	ManagementGroupIDRef *v1.Reference `json:"managementGroupIdRef,omitempty" tf:"-"`

	// Selector for a ManagementGroup in management to populate managementGroupId.
	// +kubebuilder:validation:Optional
	ManagementGroupIDSelector *v1.Selector `json:"managementGroupIdSelector,omitempty" tf:"-"`

	// The metadata for the policy set definition. This is a JSON object representing additional metadata that should be stored with the policy definition.
	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// Parameters for the policy set definition. This field is a JSON object that allows you to parameterize your policy definition.
	// +kubebuilder:validation:Optional
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// One or more policy_definition_group blocks as defined below.
	// +kubebuilder:validation:Optional
	PolicyDefinitionGroup []PolicyDefinitionGroupParameters `json:"policyDefinitionGroup,omitempty" tf:"policy_definition_group,omitempty"`

	// One or more policy_definition_reference blocks as defined below.
	// +kubebuilder:validation:Optional
	PolicyDefinitionReference []PolicyDefinitionReferenceParameters `json:"policyDefinitionReference,omitempty" tf:"policy_definition_reference,omitempty"`

	// The policy set type. Possible values are BuiltIn, Custom, NotSpecified and Static. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	PolicyType *string `json:"policyType,omitempty" tf:"policy_type,omitempty"`
}

// PolicySetDefinitionSpec defines the desired state of PolicySetDefinition
type PolicySetDefinitionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicySetDefinitionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PolicySetDefinitionInitParameters `json:"initProvider,omitempty"`
}

// PolicySetDefinitionStatus defines the observed state of PolicySetDefinition.
type PolicySetDefinitionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicySetDefinitionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PolicySetDefinition is the Schema for the PolicySetDefinitions API. Manages a policy set definition.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type PolicySetDefinition struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))",message="spec.forProvider.displayName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.policyDefinitionReference) || (has(self.initProvider) && has(self.initProvider.policyDefinitionReference))",message="spec.forProvider.policyDefinitionReference is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.policyType) || (has(self.initProvider) && has(self.initProvider.policyType))",message="spec.forProvider.policyType is a required parameter"
	Spec   PolicySetDefinitionSpec   `json:"spec"`
	Status PolicySetDefinitionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicySetDefinitionList contains a list of PolicySetDefinitions
type PolicySetDefinitionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicySetDefinition `json:"items"`
}

// Repository type metadata.
var (
	PolicySetDefinition_Kind             = "PolicySetDefinition"
	PolicySetDefinition_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicySetDefinition_Kind}.String()
	PolicySetDefinition_KindAPIVersion   = PolicySetDefinition_Kind + "." + CRDGroupVersion.String()
	PolicySetDefinition_GroupVersionKind = CRDGroupVersion.WithKind(PolicySetDefinition_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicySetDefinition{}, &PolicySetDefinitionList{})
}
