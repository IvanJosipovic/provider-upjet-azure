// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0
// Code generated by angryjet. DO NOT EDIT.

package v1beta1

import xpv1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"

// GetCondition of this HealthcareDICOMService.
func (mg *HealthcareDICOMService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetManagementPolicies of this HealthcareDICOMService.
func (mg *HealthcareDICOMService) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this HealthcareDICOMService.
func (mg *HealthcareDICOMService) GetProviderConfigReference() *xpv1.ProviderConfigReference {
	return mg.Spec.ProviderConfigReference
}

// GetWriteConnectionSecretToReference of this HealthcareDICOMService.
func (mg *HealthcareDICOMService) GetWriteConnectionSecretToReference() *xpv1.LocalSecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HealthcareDICOMService.
func (mg *HealthcareDICOMService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetManagementPolicies of this HealthcareDICOMService.
func (mg *HealthcareDICOMService) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this HealthcareDICOMService.
func (mg *HealthcareDICOMService) SetProviderConfigReference(r *xpv1.ProviderConfigReference) {
	mg.Spec.ProviderConfigReference = r
}

// SetWriteConnectionSecretToReference of this HealthcareDICOMService.
func (mg *HealthcareDICOMService) SetWriteConnectionSecretToReference(r *xpv1.LocalSecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HealthcareFHIRService.
func (mg *HealthcareFHIRService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetManagementPolicies of this HealthcareFHIRService.
func (mg *HealthcareFHIRService) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this HealthcareFHIRService.
func (mg *HealthcareFHIRService) GetProviderConfigReference() *xpv1.ProviderConfigReference {
	return mg.Spec.ProviderConfigReference
}

// GetWriteConnectionSecretToReference of this HealthcareFHIRService.
func (mg *HealthcareFHIRService) GetWriteConnectionSecretToReference() *xpv1.LocalSecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HealthcareFHIRService.
func (mg *HealthcareFHIRService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetManagementPolicies of this HealthcareFHIRService.
func (mg *HealthcareFHIRService) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this HealthcareFHIRService.
func (mg *HealthcareFHIRService) SetProviderConfigReference(r *xpv1.ProviderConfigReference) {
	mg.Spec.ProviderConfigReference = r
}

// SetWriteConnectionSecretToReference of this HealthcareFHIRService.
func (mg *HealthcareFHIRService) SetWriteConnectionSecretToReference(r *xpv1.LocalSecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HealthcareMedtechService.
func (mg *HealthcareMedtechService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetManagementPolicies of this HealthcareMedtechService.
func (mg *HealthcareMedtechService) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this HealthcareMedtechService.
func (mg *HealthcareMedtechService) GetProviderConfigReference() *xpv1.ProviderConfigReference {
	return mg.Spec.ProviderConfigReference
}

// GetWriteConnectionSecretToReference of this HealthcareMedtechService.
func (mg *HealthcareMedtechService) GetWriteConnectionSecretToReference() *xpv1.LocalSecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HealthcareMedtechService.
func (mg *HealthcareMedtechService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetManagementPolicies of this HealthcareMedtechService.
func (mg *HealthcareMedtechService) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this HealthcareMedtechService.
func (mg *HealthcareMedtechService) SetProviderConfigReference(r *xpv1.ProviderConfigReference) {
	mg.Spec.ProviderConfigReference = r
}

// SetWriteConnectionSecretToReference of this HealthcareMedtechService.
func (mg *HealthcareMedtechService) SetWriteConnectionSecretToReference(r *xpv1.LocalSecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HealthcareMedtechServiceFHIRDestination.
func (mg *HealthcareMedtechServiceFHIRDestination) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetManagementPolicies of this HealthcareMedtechServiceFHIRDestination.
func (mg *HealthcareMedtechServiceFHIRDestination) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this HealthcareMedtechServiceFHIRDestination.
func (mg *HealthcareMedtechServiceFHIRDestination) GetProviderConfigReference() *xpv1.ProviderConfigReference {
	return mg.Spec.ProviderConfigReference
}

// GetWriteConnectionSecretToReference of this HealthcareMedtechServiceFHIRDestination.
func (mg *HealthcareMedtechServiceFHIRDestination) GetWriteConnectionSecretToReference() *xpv1.LocalSecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HealthcareMedtechServiceFHIRDestination.
func (mg *HealthcareMedtechServiceFHIRDestination) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetManagementPolicies of this HealthcareMedtechServiceFHIRDestination.
func (mg *HealthcareMedtechServiceFHIRDestination) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this HealthcareMedtechServiceFHIRDestination.
func (mg *HealthcareMedtechServiceFHIRDestination) SetProviderConfigReference(r *xpv1.ProviderConfigReference) {
	mg.Spec.ProviderConfigReference = r
}

// SetWriteConnectionSecretToReference of this HealthcareMedtechServiceFHIRDestination.
func (mg *HealthcareMedtechServiceFHIRDestination) SetWriteConnectionSecretToReference(r *xpv1.LocalSecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HealthcareService.
func (mg *HealthcareService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetManagementPolicies of this HealthcareService.
func (mg *HealthcareService) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this HealthcareService.
func (mg *HealthcareService) GetProviderConfigReference() *xpv1.ProviderConfigReference {
	return mg.Spec.ProviderConfigReference
}

// GetWriteConnectionSecretToReference of this HealthcareService.
func (mg *HealthcareService) GetWriteConnectionSecretToReference() *xpv1.LocalSecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HealthcareService.
func (mg *HealthcareService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetManagementPolicies of this HealthcareService.
func (mg *HealthcareService) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this HealthcareService.
func (mg *HealthcareService) SetProviderConfigReference(r *xpv1.ProviderConfigReference) {
	mg.Spec.ProviderConfigReference = r
}

// SetWriteConnectionSecretToReference of this HealthcareService.
func (mg *HealthcareService) SetWriteConnectionSecretToReference(r *xpv1.LocalSecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HealthcareWorkspace.
func (mg *HealthcareWorkspace) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetManagementPolicies of this HealthcareWorkspace.
func (mg *HealthcareWorkspace) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this HealthcareWorkspace.
func (mg *HealthcareWorkspace) GetProviderConfigReference() *xpv1.ProviderConfigReference {
	return mg.Spec.ProviderConfigReference
}

// GetWriteConnectionSecretToReference of this HealthcareWorkspace.
func (mg *HealthcareWorkspace) GetWriteConnectionSecretToReference() *xpv1.LocalSecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HealthcareWorkspace.
func (mg *HealthcareWorkspace) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetManagementPolicies of this HealthcareWorkspace.
func (mg *HealthcareWorkspace) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this HealthcareWorkspace.
func (mg *HealthcareWorkspace) SetProviderConfigReference(r *xpv1.ProviderConfigReference) {
	mg.Spec.ProviderConfigReference = r
}

// SetWriteConnectionSecretToReference of this HealthcareWorkspace.
func (mg *HealthcareWorkspace) SetWriteConnectionSecretToReference(r *xpv1.LocalSecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
